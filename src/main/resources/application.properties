#spring.sql.init.platform=postgres
#spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
#spring.datasource.username=postgres
#spring.datasource.password=root

#spring.security.user.name=user
#spring.security.user.password=password

#considering the fact we could have multiple version (prod, dev) why not use beans and spring profiles?
#spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
#spring.datasource.username=postgres
#spring.datasource.password=root

#spring.security.user.name=user
#spring.security.user.password=password

#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=true
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQL81Dialect
#management.endpoints.web.exposure.include=*
#spring.mvc.pathmatch.matching-strategy=ant-path-matcher

#===========HEROKU========================
spring.datasource.url=postgres://trnptohwhowkks:4a9a85919bd7835ae128c06a9aface85d099f4ea891b5ed1a0b8924249eb34d8@ec2-34-251-115-141.eu-west-1.compute.amazonaws.com:5432/dbb9inedurosgg
spring.datasource.username=trnptohwhowkks
spring.datasource.password=4a9a85919bd7835ae128c06a9aface85d099f4ea891b5ed1a0b8924249eb34d8

spring.security.user.name=user
spring.security.user.password=password

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQL81Dialect
management.endpoints.web.exposure.include=*
spring.mvc.pathmatch.matching-strategy=ant-path-matcher




#==========================

# do h2 powyzej do postgresa
#spring.datasource.url=jdbc:h2:mem:testdb
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=sa
#spring.datasource.password=
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#spring.h2.console.enabled=true
#spring.jpa.defer-datasource-initialization=true